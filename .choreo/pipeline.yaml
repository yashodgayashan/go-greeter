steps:
  - name: Build Steps
    containerSet:
      containers:
      - name: Go Test Step
        containerTemplate: test-container
      - name: Go Lint Step
        containerTemplate: lint-container
      - name: Build Component
        containerTemplate: choreo/buildpack-build@v1
      - name: Vulnerability Scan
        containerTemplate: choreo/trivy-scan@v1
  - name: Slack Notification
    template: slack-notification

templates:
  - name: slack-notification
    inlineScript: |
      #!/bin/bash
      echo "Sending Slack notification..."
      MESSAGE=":white_check_mark: Pipeline succeeded"
      curl -X POST \
        -H 'Content-type: application/json' \
        --data "{\"text\":\"$MESSAGE\"}" \
        $SLACK_WEBHOOK_URL
    env:
      - name: SLACK_WEBHOOK_URL
        value: "{{SECRETS.SLACK_WEBHOOK_URL}}"

containerTemplates:
  - name: test-container
    image: golang:latest
    inlineScript: |
      #!/bin/sh
      echo "Installing Go version $GO_VERSION and running tests..."
      go version
      cd $REPOSITORY_DIR
      make test
    env:
      - name: GO_VERSION
        value: "{{VARIABLES.GO_VERSION}}"
  - name: lint-container
    image: golang:latest
    inlineScript: |
      #!/bin/bash
      set -e
      echo "Installing Go version $GO_VERSION and running tests..."
      go version
      
      # Install golangci-lint
      curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b /usr/local/bin v1.54.2
      
      # Verify linting tools installation
      golangci-lint version
      
      # Navigate to repository and run lint
      cd $REPOSITORY_DIR
      make lint-comprehensive
    env:
      - name: GO_VERSION
        value: "{{VARIABLES.GO_VERSION}}"
