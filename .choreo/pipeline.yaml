steps:
  - name: Dockerfile Scan
    template: choreo/dockerfile-scan@v1
  - - name: Go Test
      template: go-test
    - name: Go Lint
      template: go-lint
  - name: Docker Build
    template: choreo/docker-build@v1
  - name: Vulnerability Scan
    template: choreo/trivy-scan@v1
  - name: Slack Notification
    template: slack-notification
templates:
  - name: go-test
    inlineScript: |
      #!/bin/bash
      echo "Installing Go..."
      apt update && apt install -y golang

      sleep 120

      echo "Changing directory to repository directory..."
      cd $REPOSITORY_DIR
      echo "Running Go test..."
      go test
    env:
      - name: GO_VERSION
        value: "1.20"
  - name: go-lint
    inlineScript: |
      #!/bin/bash
      # echo "Installing Go..."
      # apt update && apt install -y golang golangci-lint

      
      sleep 120

      echo "Changing directory to repository directory..."
      cd $REPOSITORY_DIR
      echo "Running Go lint..."
      # golangci-lint run
    env:
      - name: GO_VERSION
        value: "1.20"
  - name: slack-notification
    inlineScript: |
      #!/bin/bash
      echo "Sending Slack notification..."
      MESSAGE=":white_check_mark: Pipeline succeeded"
      curl -X POST \
        -H 'Content-type: application/json' \
        --data "{\"text\":\"$MESSAGE\"}" \
        $SLACK_WEBHOOK_URL
    env:
      - name: SLACK_WEBHOOK_URL
        value: "{{SECRETS.SLACK_WEBHOOK_URL}}"
