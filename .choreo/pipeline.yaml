steps:
  - name: Build Steps
    containerSet:
      containers:
      - name: Buildpack Build
        containerTemplate: choreo/buildpack-build@v1
      - name: Vulnerability Scan
        containerTemplate: choreo/trivy-scan@v1
      - name: Test
        containerTemplate: test-container
      - name: Lint
        containerTemplate: lint-container
  - name: Static Code Analysis
    template: sonar-qube

templates:
  - name: sonar-qube
    inlineScript: |
      #!/bin/bash
      echo "Starting SonarQube scan..."
    env:
      - name: SONAR_PROJECT_KEY
        value: "hello"

containerTemplates:
  - name: test-container
    image: golang:latest
    inlineScript: |
      #!/bin/sh
      echo "Installing Go version $GO_VERSION and running tests..."
      go version
      cd $REPOSITORY_DIR
      make test
    env:
      - name: GO_VERSION
        value: "{{VARIABLES.GO_VERSION}}"
  - name: lint-container
    inlineScript: |
      #!/bin/bash
      set -e
      echo "Installing Go version $GO_VERSION and running lint..."
      
      # Update package list
      apt-get update -y
      
      # Install required packages
      apt-get install -y wget curl make git
      
      # Download and install Go
      GO_ARCHIVE="go${GO_VERSION}.linux-amd64.tar.gz"
      wget "https://golang.org/dl/${GO_ARCHIVE}"
      tar -C /usr/local -xzf "${GO_ARCHIVE}"
      rm "${GO_ARCHIVE}"
      
      # Set up Go environment
      export PATH="/usr/local/go/bin:$PATH"
      export GOPATH="/go"
      export GOROOT="/usr/local/go"
      
      # Verify Go installation
      go version
      
      # Navigate to repository and run lint
      cd $REPOSITORY_DIR
      make lint-comprehensive
    env:
      - name: GO_VERSION
        value: "{{VARIABLES.GO_VERSION}}"
